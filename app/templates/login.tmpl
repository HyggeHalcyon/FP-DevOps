<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Login</title>
  <style>
     body {
      font-family: Poppins, sans-serif;
      max-width: 400px;
      margin: 100px auto;
      padding: 20px;
      background-color: #01153E;
    }
    .login-container {
      background: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    .form-group {
      margin-bottom: 20px;
    }
    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }
    input[type="text"],
    input[type="password"] {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      box-sizing: border-box;
    }
    button {
      width: 100%;
      padding: 12px;
      background-color: #28a745;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
    }
    button:hover {
      background-color: #218838;
    }
    .error {
      color: #dc3545;
      margin-top: 10px;
      display: none;
    }
    .success {
      color: #28a745;
      margin-top: 10px;
      display: none;
    }
    .links {
      text-align: center;
      margin-top: 20px;
    }
    .links a {
      color: #007bff;
      text-decoration: none;
    }
    .links a:hover {
      text-decoration: underline;
    }
    h1 {
      text-align: center;
      color: #333;
      margin-bottom: 30px;
    }
    .password-requirements {
      font-size: 12px;
      color: #666;
      margin-top: 5px;
    }
  </style>
</head>
<body>
  <div class="login-container">
    <h1>Login</h1>
    <form id="loginForm">
      <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required />
      </div>
      <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required />
      </div>
      <button type="submit">Login</button>
      <div id="error" class="error"></div>
      <div id="success" class="success"></div>
    </form>
    <div class="links">
      <p>Don't have an account? <a href="/register">Register here</a></p>
      <p><a href="/">Back to Home</a></p>
    </div>
  </div>

  <script>
    document.getElementById('loginForm').addEventListener('submit', async function(e) {
      e.preventDefault();

      const username = document.getElementById('username').value;
      const password = document.getElementById('password').value;
      const errorDiv = document.getElementById('error');
      const successDiv = document.getElementById('success');

      // Hide previous messages
      errorDiv.style.display = 'none';
      successDiv.style.display = 'none';

      try {
        const response = await fetch('/api/user/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ username, password })
        });
        const data = await response.json();

        if (data.status) {
          const token = data.data.token;

          // 1) Store JWT in a cookie (for page‐level middleware):
          //    Expires in 1 hour (3600 seconds). Adjust max-age if needed.
          document.cookie = `jwt=${token}; path=/; max-age=${60 * 60}; SameSite=Lax`;

          // 2) Save the same token in localStorage (for API calls):
          localStorage.setItem('token', token);

          successDiv.textContent = 'Login successful! Redirecting…';
          successDiv.style.display = 'block';

          setTimeout(() => {
            // Redirect to /dashboard; the cookie will be sent automatically.
            window.location.href = '/dashboard';
          }, 800);
        } else {
          errorDiv.textContent = data.error || 'Login failed';
          errorDiv.style.display = 'block';
        }
      } catch (err) {
        errorDiv.textContent = 'Network error. Please try again.';
        errorDiv.style.display = 'block';
      }
    });
  </script>
</body>
</html>
